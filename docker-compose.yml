version: '3.8'

services:
  # Main Application (Backend + Frontend)
  app:
    build: .
    ports:
      - "9000:9000"    # Backend API and Socket.IO
      - "5173:5173"    # Frontend dev server (if needed)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # âœ… ONLY FIX: REMOVED SHARED VOLUME - NO MORE ./server/user:/app/user
      # Users will get individual directories created dynamically
    environment:
      - NODE_ENV=production
      # Database Configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=yourpassword
      - DB_NAME=playground_db
      - JWT_SECRET=your-super-secret-jwt-key
      # MinIO Configuration
      - MINIO_ENDPOINT=minio
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - playground_network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=playground_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=yourpassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - playground_network

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - playground_network

  # MinIO Cloud Storage Service
  minio:
    image: minio/minio:latest
    container_name: minio_storage
    command: server /data --console-address ":9002"
    ports:
      - "9001:9000"
      - "9002:9002"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - playground_network

  # Auto-create MinIO bucket
  createbucket:
    image: minio/mc:latest
    container_name: minio_setup
    depends_on:
      - minio
    restart: on-failure
    networks:
      - playground_network
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...';
      sleep 15;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/user-files --ignore-existing;
      /usr/bin/mc policy set public myminio/user-files;
      echo 'MinIO bucket user-files created successfully';
      exit 0;
      "

  # Frontend Development Server (Optional - for dev profile)
  frontend-dev:
    build:
      context: ./interface
      dockerfile: Dockerfile.dev
    ports:
      - "5174:5173"
    volumes:
      - ./interface:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:9000
    networks:
      - playground_network
    profiles:
      - dev

# Network Configuration
networks:
  playground_network:
    driver: bridge

# Volume Configuration
volumes:
  postgres_data:
  redis_data:
  minio_data:
